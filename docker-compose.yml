version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: tripdoge-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-zeabur}
      MYSQL_USER: ${MYSQL_USERNAME:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql/my.cnf:/etc/my.cnf:ro
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --host-cache-size=0
      - --skip-name-resolve
      - --max_allowed_packet=10M
      - --performance_schema=off
    networks:
      - tripdoge-network

  postgresql:
    image: pgvector/pgvector:pg17
    container_name: tripdoge-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-zeabur}
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tripdoge-network

  minio:
    image: quay.io/minio/minio:latest
    container_name: tripdoge-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-password123}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKET:-zeabur}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9090"
    networks:
      - tripdoge-network

  redis:
    image: redis/redis-stack-server:latest
    container_name: tripdoge-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password123}
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/etc/redis-stack.conf:ro
    command: 
      - /etc/redis-stack.conf
      - --requirepass ${REDIS_PASSWORD:-password123}
    networks:
      - tripdoge-network

  trip-doge-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: tripdoge-backend
    restart: unless-stopped
    ports:
      - "7979:7979"
      - "8080:8080"
    environment:
      # MySQL 配置
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE:-zeabur}
      MYSQL_USERNAME: ${MYSQL_USERNAME:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password123}
      
      # PostgreSQL 向量数据库配置
      PGVECTOR_HOST: postgresql
      PGVECTOR_PORT: 5432
      PGVECTOR_DATABASE: ${PGVECTOR_DATABASE:-trip_vdb}
      PGVECTOR_USER: ${PGVECTOR_USER:-root}
      PGVECTOR_PASSWORD: ${PGVECTOR_PASSWORD:-password123}
      PGVECTOR_TABLE: ${PGVECTOR_TABLE:-embeddings}
      
      # Redis 配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password123}
      REDIS_DATABASE: ${REDIS_DATABASE:-0}
      
      # MinIO 配置
      MINIO_ENDPOINT: http://minio:9000
      MINIO_AK: ${MINIO_AK:-minio}
      MINIO_SK: ${MINIO_SK:-password123}
      
      # 邮件配置
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      
      # 其他配置
      DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY}
      PORT: ${PORT:-7979}
      SESSION_COOKIE_SECURE: ${SESSION_COOKIE_SECURE:-false}
    depends_on:
      - mysql
      - postgresql
      - redis
      - minio
    networks:
      - tripdoge-network

  trip-doge-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: tripdoge-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-http://localhost:7979}
      DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY}
    depends_on:
      - trip-doge-backend
    networks:
      - tripdoge-network

volumes:
  mysql_data:
  postgres_data:
  minio_data:
  redis_data:

networks:
  tripdoge-network:
    driver: bridge